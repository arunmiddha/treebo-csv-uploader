Metadata-Version: 1.1
Name: treebo-csv-uploader
Version: 1.0.1
Summary: Generic csv upload with pluggable actions
Home-page: https://github.com/TreeboHotels/treebo_csv_uploader
Author: Utkarsh Mishra
Author-email: utkarsh.mishra@treebohotels.com
License: BSD
Description: ===================
        treebo-csv-uploader
        ===================
        
        
        This project provides a generic interface for uploading csv files and registering actions for uploaded values.
        
        Installation
        ------------
        
        First add to requirement file:
        
        .. code::
        
            treebo-csv-uploader
        
        Add the health checker to an URL you want to use:
        
        .. code:: python
        
            urlpatterns = [
                # ...
                url(r'^csv/$', include('csv_uploader.urls')),
            ]
        
        Add the ``treebo-csv-uploader`` applications to your ``INSTALLED_APPS``:
        
        .. code:: python
        
            INSTALLED_APPS += [
                # ...
                'treebo_csv_uploader.apps.CsvUploaderConfig',                             # required
            ]
        
        SAMPLE CONFIGURATION:
        
            CSV_UPLOADER = {"actions": {
                        "invoice_mailer": {
                            "base_path": 'invoicing.csv_actions'
                        }}
                        }
        
        at base path register validators and handlers:
        
        from integrations.notifications.async_service import AsyncNotificationService
        from csv_uploader.handler import CsvHandlerRegisty
        
        
        @CsvHandlerRegisty.async_handler('INVOICE_MAILER')
        def handle_invoice_mailer(invoice, job_id):
            AsyncNotificationService.mail_invoices([invoice['INVOICE_ID']], job_id)
            return True
        
        
        from csv_uploader.validator import CsvValidatorRegistry
        
        
        @CsvValidatorRegistry.header_validator('INVOICE_MAILER', ['INVOICE_ID'])
        def validate_invoice_mailer_header(user, header):
            return header==['INVOICE_ID']
        
        
        @CsvValidatorRegistry.row_validator('INVOICE_MAILER')
        def validate_invoice_mailer_row(user, args):
            return True
        
Keywords: csv upload
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Framework :: Django
Classifier: Framework :: Django :: 1.8
Classifier: Framework :: Django :: 1.9
Classifier: Framework :: Django :: 1.10
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: License :: Public Domain
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Software Development :: Quality Assurance
Classifier: Topic :: System :: Logging
Classifier: Topic :: System :: Monitoring
Classifier: Topic :: Utilities
